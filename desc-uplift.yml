transform:
  # Keep data only
  - '.data'
  # Set fields with empty or '-' value to null
  - 'walk(if type == "object" then with_entries(if (.value | test("^\\s*-?\\s*$")) then .value = null else . end) else . end)'
  # Remove colons in field names with spaces
  - 'walk(if type == "object" then with_entries(.key |= sub(" ?: ?"; " ")) else . end)'
  # turn known fields with space separated lists into arrays
  - |
        walk(if (type == "object") then 
          ( if (.formula and .formula != "-") then .formula |= split("\n") else .formula = [] end | 
            if (.extendedDescription and .extendedDescription != "-") then .extendedDescription |= split("\n") else .extendedDescription = [] end )
          else . end)
  # Add ConceptScheme
  - |
    {
      "@id": "https://standards.isotc211.org/19157/-3/1/req/content/measureDescription",
      "@type": "skos:ConceptScheme",
      "skos:prefLabel": "ISO19157-3 quality measures extended Description",
      "concepts": .
    }

types:
  '$.concepts[*]': skos:Concept

context:
  $:
    # measureDescriptionID,extendedDescription,formula,textDescription
    skos: http://www.w3.org/2004/02/skos/core#
    dct: http://purl.org/dc/terms/
    policy: http://www.opengis.net/def/metamodel/ogc-na/
    dqm: http://www.opengis.net/def/metamodel/isodqm/
    measureDescriptionID: '@id'
    textDescription: skos:definition
    extendedDescription:
      '@id': 'http://www.opengis.net/def/metamodel/isodqm/illustration'
      '@type': '@id'
    formula:
        '@id': 'http://www.opengis.net/def/metamodel/isodqm/formula'
        '@type': '@id'
    concepts:
      '@reverse': skos:inScheme
